<launch>
    <!-- Códigos de comunicação de fora do movimento e geração de tipos de movimento -->
	<node name="mov_bridge" pkg="mov_bridge" type="mov_bridge.py" output="screen" >   </node>
	<node name="movement_preparing" pkg="approved_movement_preparing" type="approved_movement_prep.py" output="log" >    </node>
    
    <!-- Códigos de comunicação de com os controladores da simulação e da robô física -->
    <arg name="simulation" default="false" />
    <node name="movement_final_comm" pkg="movement_endpoint_comm" type="conversions_2_comm_w_webots.py" output="screen" if="$(eval arg('simulation'))">  </node>
    <node name="movement_final_comm" pkg="movement_endpoint_comm" type="conversions_2_comm_w_opencm.py" output="screen" if="$(eval arg('simulation') == false)">  </node>

    <!-- Webots -->
	<include file="$(find movement_simulation)/launch/movement_simulator.launch" if="$(eval arg('simulation'))"> </include>

    <!-- Códigos de teste e seus parametros passados no terminal -->
    <arg name="walk_test" default="false" />
    <node name="walk_test_interface" pkg="movement_interface" type="walking_interface.py" output="screen" if="$(eval arg('walk_test'))">  </node>

    <!-- Códigos de criação de movimento -->
    <node name="walk_creator" pkg="walk_creator" type="walk_creator" output="screen" >   </node>

</launch>